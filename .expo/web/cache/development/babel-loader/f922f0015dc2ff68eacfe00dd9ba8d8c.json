{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umair\\\\Downloads\\\\New folder (3)\\\\react\\\\react-native\\\\openid\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Google from 'expo-google-app-auth';\n\nvar handlesign = function handlesign() {\n  var config = {\n    androidClientId: \"844866902004-un7qqgtprvlcjko5994brs66jtmdp1m8.apps.googleusercontent.com\",\n    iosClientId: \"844866902004-p5a01gegc8cbk7iuovpd64u8mk48k8bh.apps.googleusercontent.com\",\n    scopes: ['profile', 'email']\n  };\n  Google.logInAsync(config).then(function (result) {\n    var type = result.type,\n        user = result.user;\n\n    if (type == 'success') {\n      alert(\"this is us\");\n    } else {\n      console.log(\"error\");\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\nexport default function App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    color: \"red\",\n    onPress: handlesign,\n    title: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/umair/Downloads/New folder (3)/react/react-native/openid/App.js"],"names":["StatusBar","React","useState","Google","handlesign","config","androidClientId","iosClientId","scopes","logInAsync","then","result","type","user","alert","console","log","catch","error","App","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAIA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;;AAEA,IAAMC,UAAU,GAAC,SAAXA,UAAW,GAAI;AACnB,MAAMC,MAAM,GAAC;AACXC,IAAAA,eAAe,4EADJ;AAEXC,IAAAA,WAAW,4EAFA;AAGXC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AAHG,GAAb;AAMAL,EAAAA,MAAM,CACLM,UADD,CACYJ,MADZ,EAECK,IAFD,CAEM,UAACC,MAAD,EAAU;AACd,QAAOC,IAAP,GAAkBD,MAAlB,CAAOC,IAAP;AAAA,QAAYC,IAAZ,GAAkBF,MAAlB,CAAYE,IAAZ;;AACA,QAAID,IAAI,IAAI,SAAZ,EAAuB;AACrBE,MAAAA,KAAK,CAAC,YAAD,CAAL;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GATD,EAUCC,KAVD,CAUO,UAAAC,KAAK,EAAE;AAACH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAAmB,GAVlC;AAWD,CAlBD;;AAqBA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAEjB,UAA9B;AAA0C,IAAA,KAAK,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAMD;AAED,IAAMgB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View,Image,TouchableOpacity,Button } from 'react-native';\n\n\nimport * as Google from 'expo-google-app-auth';\n\nconst handlesign=()=>{\n  const config={\n    androidClientId: `844866902004-un7qqgtprvlcjko5994brs66jtmdp1m8.apps.googleusercontent.com`,\n    iosClientId: `844866902004-p5a01gegc8cbk7iuovpd64u8mk48k8bh.apps.googleusercontent.com`,\n    scopes: ['profile', 'email'],\n  }\n\n  Google\n  .logInAsync(config)\n  .then((result)=>{\n    const {type,user}=result;\n    if (type == 'success') {\n      alert(\"this is us\")\n    } else {\n      console.log(\"error\")\n    }\n  })\n  .catch(error=>{console.log(error)})\n}\n\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n    <Button  color=\"red\" onPress={handlesign} title=\"Login\"/>\n       \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}